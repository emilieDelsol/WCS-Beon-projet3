@model Device
@{ ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_LayoutBeonDashboard.cshtml"; }

@{
    IEnumerable<EnvironmentPayload> environmentOrderByAsc = Model.EnvironmentPayloads.OrderBy(a => a.TimestampEvent);
    EnvironmentPayload environment = environmentOrderByAsc.Last();
    IEnumerable<EnvironmentPayload> env72 = environmentOrderByAsc.Where(e => e.TimestampEvent > environment.TimestampEvent.AddHours(-72));
    IEnumerable<EnvironmentPayload> env24 = environmentOrderByAsc.Where(e => e.TimestampEvent > environment.TimestampEvent.AddHours(-24));

    double Shock = 0;
    int NumberOfShock = environmentOrderByAsc.Count(a => a.EventType == "3");
    foreach (EnvironmentPayload env in environmentOrderByAsc)
    {
        if (env.Smax > Shock)
        {
            Shock = env.Smax;
        }
    } }
<aside class=" p-0  flex-shrink-1" style="  background-color: #201063">
    <nav class="navbar navbar-expand navbar-dark flex-lg-column flex-row align-items-start p-0">
        <div class="collapse navbar-collapse row m-auto">

            <ul class="flex-lg-column flex-row navbar-nav justify-content-between ">
                <li class="list-group-item  rounded-0" style="  background-color: #201063;">
                    <a class="nav-link pl-0 text-nowrap" style="color: white; font-weight:bold;" asp-controller="Home" asp-action="Index"><i class="fas fa-home "></i><span class="d-none d-lg-inline"> Home</span></a>
                </li>
                <li class="list-group-item" style="  background-color: #201063">
                    <a class="nav-link pl-0" style="color: white; font-weight:bold;" asp-controller="Beon" asp-action="listDevices"><i class="fas fa-eye "></i> <span class="d-none d-lg-inline">Tracker list</span></a>
                </li>
                <li class="list-group-item" style="  background-color: #201063">
                    <a class="nav-link pl-0" style="color: white; font-weight:bold; " asp-controller="Beon" asp-action="Overview"><i class="fas fa-globe-europe "></i><span class="d-none d-lg-inline"> Overview</span></a>
                </li>
                <li class="list-group-item pr-0 pl-0 d-none d-lg-block" style="  background-color: #201063">
                    <a class="nav-link pl-0 dropdown-toggle  ml-3 " style="color: white; font-weight:bold;" data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="true" aria-controls="collapseExample"><i class="fa fa-star fa-fw"></i> <span class="d-none d-lg-inline"> Dashboard</span></a>
                    <div class="collapse  " id="collapseExample">
                        <a class="nav-link pl-3" style="color: white; font-weight:bold; background-color:#150b42" asp-controller="Beon" asp-action="Location1Device"  asp-route-IdDevice="@Model.DeviceId"><i class="fas fa-map-marked"></i> <span class="d-none d-lg-inline"> Location</span></a>
                        <a class="nav-link pl-3" style="color: white; font-weight:bold;  background-color:#150b42" asp-controller="Beon" asp-action="Temp" asp-route-IdDevice="@Model.DeviceId"><i class="fas fa-temperature-high"></i><span class="d-none d-lg-inline"> Temperature</span></a>
                        <a class="nav-link pl-3" style="color: white; font-weight:bold;  background-color:#150b42" asp-controller="Beon" asp-action="Dashboard" asp-route-IdDevice="@Model.DeviceId"><i class="fas fa-globe-europe "></i><span class="d-none d-lg-inline"> Overview</span></a>
                    </div>
                </li>
            </ul>
        </div>
    </nav>
</aside>
<main role="main" class="col p-0">

<section class="container-fluid p-0 ">
    <header class="border p-2 d-flex justify-content-between">
        <div class="d-none d-lg-block">
            <h3 class="text-left  ">Dashboard</h3>
            <p class="text-left  m-0">@DateTime.Now</p>
        </div>
        <h2 class="text-center m-auto">
            <i class="fas fa-crosshairs"></i>Tracker  @Model.DeviceId
        </h2>
        <p class="d-none d-lg-block">&ensp; </p>
    </header>
    <article class="card-deck p-0  m-0 d-flex flex-column flex-lg-row justify-content-between">
        <div class="card m-3">
            <div class="card-header pb-0" style="color: #201063; ">
                <h5 class="card-title" style="font-weight: bold;"><i class="fas fa-history"></i> Last contact</h5>
            </div>
            <div class="card-body ">
                <p class="card-text">@environment.TimestampEvent</p>
            </div>
        </div>
        <div class="card m-3">
            <div class="card-header pb-0" style=" color: #201063;">
                <h5 class="card-title" style="font-weight: bold;"><i class="fas fa-exclamation-triangle"></i> Number of shocks</h5>
            </div>
            <div class="card-body ">
                <p class="card-text ">- total shocks: @NumberOfShock  </p>
                <p class="card-text ">- since last 72h: @environment.TotalShock </p>
                <p class="card-text ">- since last contact: @environment.Cptshockovlastperiod </p>
                <p class="card-text">- Max shock: @Shock g</p>
            </div>
        </div>
        <div class="card m-3">
            <div class="card-header pb-0" style=" color: #201063;">
                <h5 class="card-title " style="font-weight: bold;"><i class="fas fa-temperature-high"></i> Temperature</h5>
            </div>
            <div class="card-body text-center">
                <h5 class="card-title ">Since last 72h: </h5>
                <p class="card-text">-Max:  @env72.OrderByDescending(a => a.Tmax).First().Tmax °C</p>
                <p class="card-text">-Min:  @env72.OrderByDescending(a => a.Tmax).First().Tmin °C</p>
                <p class="card-text">-Mean:  @env72.OrderByDescending(a => a.Tmax).First().Tmean °C</p>
                <p class="card-text">-Total alert duration:  @env72.OrderByDescending(a => a.TotalAlertDuration).First().TotalAlertDuration</p>
                <p class="card-text">-Total alert duration all BDD:  @environmentOrderByAsc.OrderByDescending(a => a.TotalAlertDuration).First().TotalAlertDuration</p>
            </div>
        </div>

        <div class="card m-3">
            <div class="card-header pb-0 mb-0" style=" color: #201063;">
                <h5 class="card-title " style="font-weight: bold;"><i class="fas fa-battery-full"></i> Battery level</h5>
            </div>
            <div class="card-body text-center">
                <h5 class="card-title " id="batteryTitle"> @environment.Batterylvl</h5>
                <div class="batteryContainer justify-content-center">
                    <div class="batteryOuter "><div class="batteryLevel" id="batteryLevel"></div></div>
                    <div class="batteryBump"></div>
                </div>
            </div>
        </div>
    </article>

    <article class="container-fluid p-3 p-lg-0 m-auto d-flex flex-column flex-lg-row justify-content-around">
        <div class="card m-auto m-lg-3 col-12 col-lg-5 p-0 ">
            <div class="card-header pb-0" style=" color: #201063;">
                <h5 class="card-title " style="font-weight: bold;"><a asp-controller="Beon" asp-action="Location1Device" asp-route-IdDevice="@Model.DeviceId" style="color: #201063;"><i class="fas fa-map-marked"></i> Location</a></h5>
            </div>
            <div class="card-body">
                <div id="map"></div>
            </div>
        </div>
        <div class="col ml-lg-3 mr-lg-3 p-0">
            <div id="accordion">
                <div class="card col-12 mr-auto ml-auto mt-3 mb-3 p-0">
                    <div class="card-header " style=" color: #201063;" id="headingAlert">
                        <h5 class="mb-0">
                            <button class="btn  collapsed" data-toggle="collapse" data-target="#collapseAlert" aria-expanded="false" aria-controls="collapseAlert" style="background-color:red; color: #201063; font-weight:bold">
                                <i class="far fa-bell"></i><span> Alert!</span>
                            </button>
                            <button class="btn  collapsed d-none" data-toggle="collapse" data-target="#collapseAlert" aria-expanded="false" aria-controls="collapseAlert" style="color: #201063; font-weight:bold">
                                <i class="far fa-bell"></i><span class="">No alert</span>
                            </button>
                        </h5>
                    </div>
                    <div id="collapseAlert" class="collapse" aria-labelledby="headingAlert" data-parent="#accordion">
                        <div class="card-body">
                            @{ foreach (var env in environmentOrderByAsc)
                                {
                                    if (env.EventType == "1")
                                    {
                                        <div>
                                            <input type="button" class ="btn btn-primary"value="alert temperture" onclick="updateMapCarte(@env.ComputedLatitude, @env.ComputedLongitude)">
                                        </div> }
                                    else if (env.EventType == "2")
                                    {
                                        <div>
                                            <h1>Alert temperature terminé</h1>
                                        </div> }
                                    else if (env.EventType == "3")
                                    {
                                        <div>
                                            <h1>Alert Shock</h1>
                                        </div> }
                                    else
                                    {
                                        continue;
                                    }
                                } }
                        </div>
                    </div>
                </div>
            </div>
            <div class="card  mt-3 mb-3 col-12 p-0 ">
                <div class="card-header pb-0" style=" color: #201063;">
                    <h5 class="card-title" style="font-weight: bold; "><a  asp-controller="Beon" asp-action="Temp" asp-route-IdDevice="@Model.DeviceId" style="color: #201063;"><i class="fas fa-temperature-high"></i> Temperature</a></h5>
                </div>
                <div class="card-body">
                    <div class="d-flex flex-row justify-content-between ">
                        <div class="text-center m-1">
                            <button type="button" id="sortButton24" class="btn btn-success" onclick="UpdateChart24()">24h</button>
                            <button type="button" id="sortButton72" class="btn btn-dark" onclick="UpdateChart72()">72h</button>
                        </div>
                        <div class="text-center">
                            <label class="endDate">
                                sort between date :
                                <input type="datetime" name="beginDate" id="beginDate" value="" placeholder="yyyy-MM-ddTHH:mm:ss">
                                <input type="datetime" name="endDate" id="endDate" value="" placeholder="yyyy-MM-ddTHH:mm:ss">
                                <button type="button" id="bouton" onclick="UpdateChartBetweenDate()">send</button>
                            </label>
                        </div>


                    </div>

                    <div class="" style="height:auto">
                        <canvas id="tempsChart" class=" col-12"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </article>
</section>
</main>

<script type="text/javascript">
    let batteryLvl = @Convert.ToInt32(environment.Batterylvl);

    function UpdateChartBetweenDate() {
        var beginDate = new Date(document.getElementById("beginDate").value);
        var endDate = new Date(document.getElementById("endDate").value);
        let maxSortBetween = new Array();
        let minSortBetween = new Array();
        let meanSortBetween = new Array();
        let myLabelBetween = new Array();

        @foreach(EnvironmentPayload envi in environmentOrderByAsc)
        {
             <Text>
        var dateToCompare = new Date('@envi.TimestampEvent.ToString("yyyy-MM-ddTHH:mm:ss")');
        if (dateToCompare >= beginDate && endDate>=dateToCompare)
        {
            maxSortBetween.push(@envi.Tmax);
            minSortBetween.push(@envi.Tmin);
            meanSortBetween.push(@envi.Tmean);
             myLabelBetween.push("@envi.TimestampEvent.Day/@envi.TimestampEvent.Month/@envi.TimestampEvent.Year @envi.TimestampEvent.Hour:@envi.TimestampEvent.Minute ");
        }
           </Text>
        }
        myLineChart.data.datasets[0].data = maxSortBetween;
        myLineChart.data.datasets[1].data = minSortBetween;
        myLineChart.data.datasets[2].data = meanSortBetween;
        myLineChart.data.labels = myLabelBetween;
        myLineChart.update();
        if (endDate < beginDate) {
            alert("Error! End date must be after start date . No values..");
        }
        else {
            alert("You ask :  begin date:" + beginDate + " end date:  " + endDate + ". THERE IS  " + maxSortBetween.length + " VALUES");
        }
    }

        let min72 = new Array();
        let max72 = new Array();
        let mean72 = new Array();
        let myLabel72 = new Array();
        let min24 = new Array();
        let max24 = new Array();
        let mean24 = new Array();
        let myLabel24 = new Array();
        let i = 1;
        let j = 1;
        let maxx24;
        let minx24;
        let meanx24;
        let maxx72;
        let minx72;
    let meanx72;


    @{

            IEnumerable<EnvironmentPayload> environmentSortBetweenDate = environmentOrderByAsc;

        <text>
            maxx24 = @env24.OrderByDescending(a => a.Tmax).First().Tmax;
            minx24 = @env24.OrderByDescending(a => a.Tmin).First().Tmin;
            meanx24 = @env24.OrderByDescending(a => a.Tmean).First().Tmean;
            maxx72 = @env72.OrderByDescending(a => a.Tmax).First().Tmax;
            minx72 = @env72.OrderByDescending(a => a.Tmin).First().Tmin;
            meanx72 = @env72.OrderByDescending(a => a.Tmean).First().Tmean;
        </text>
            foreach (EnvironmentPayload env in env72)
            {

                 <text>
                min72.push(@env.Tmin)
                max72.push(@env.Tmax)
    mean72.push(@env.Tmean);
    myLabel72.push("@env.TimestampEvent.Day/@env.TimestampEvent.Month/@env.TimestampEvent.Year @env.TimestampEvent.Hour:@env.TimestampEvent.Minute ");
                i = i + 1;
                </text>
            }
            foreach (EnvironmentPayload env in env24.OrderBy(e=>e.TimestampEvent))
            {
                <text>
                min24.push(@env.Tmin)
                max24.push(@env.Tmax)
                mean24.push(@env.Tmean);
                myLabel24.push("@env.TimestampEvent.Day/@env.TimestampEvent.Month/@env.TimestampEvent.Year @env.TimestampEvent.Hour:@env.TimestampEvent.Minute ");
                j = j + 1;
                </text>
             }
        }

</script>
