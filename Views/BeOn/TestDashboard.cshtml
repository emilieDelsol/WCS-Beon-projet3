@model Device
@{ ViewData["Title"] = "Test Dashboard";
    Layout = "~/Views/Shared/_LayoutBeonDashboard.cshtml"; }

@{
    IEnumerable<EnvironmentPayload> environmentOrderByDesc = Model.EnvironmentPayloads.OrderByDescending(a => a.TimestampEvent);
    EnvironmentPayload environment = environmentOrderByDesc.First();
    IEnumerable<EnvironmentPayload> env72 = environmentOrderByDesc.Where(e => e.TimestampEvent > environment.TimestampEvent.AddHours(-72));
    IEnumerable<EnvironmentPayload> env24= environmentOrderByDesc.Where(e => e.TimestampEvent > environment.TimestampEvent.AddHours(-24));

    double Shock = 0;
    int NumberOfShock = environmentOrderByDesc.Count(a => a.EventType == "3");
    foreach (EnvironmentPayload env in environmentOrderByDesc)
    {
        if (env.Smax > Shock)
        {
            Shock = env.Smax;
        }
    } }

  

}

<section class="container-fluid p-0 ">
    <header class="border p-2 d-flex justify-content-between">
        <div class="d-none d-lg-block">
            <h3 class="text-left  ">Dashboard</h3>
            <p class="text-left  m-0">@DateTime.Now</p>
        </div>
        <h2 class="text-center m-auto">
            <i class="fas fa-crosshairs"></i>Tracker  @Model.DeviceId
        </h2>
        <p class="d-none d-lg-block">&ensp; </p>
    </header>
    <article class="card-deck p-0  m-0 d-flex flex-column flex-lg-row justify-content-between">
        <div class="card m-3">
            <div class="card-header pb-0" style="color: #201063; ">
                <h5 class="card-title" style="font-weight: bold;"><i class="fas fa-history"></i> Last contact</h5>
            </div>
            <div class="card-body ">
                <p class="card-text">@environment.TimestampEvent</p>
            </div>
        </div>
        <div class="card m-3">
            <div class="card-header pb-0" style=" color: #201063;">
                <h5 class="card-title" style="font-weight: bold;"><i class="fas fa-exclamation-triangle"></i> Number of shocks</h5>
            </div>
            <div class="card-body ">
                <p class="card-text ">- total shocks:@NumberOfShock  </p>
                <p class="card-text ">- since last 72h: @environment.TotalShock </p>
                <p class="card-text ">- since last contact: @environment.Cptshockovlastperiod </p>
                <p class="card-text">- Max shock: @Shock g</p>
            </div>
        </div>
        <div class="card m-3">
            <div class="card-header pb-0" style=" color: #201063;">
                <h5 class="card-title " style="font-weight: bold;"><i class="fas fa-temperature-high"></i> Temperature</h5>
            </div>
            <div class="card-body text-center">
                <h5 class="card-title ">Since last 72h: </h5>
                <p class="card-text">-Max:</p>
                <p class="card-text">-Min:</p>
                <p class="card-text">-Mean:</p>
            </div>
        </div>

        <div class="card m-3">
            <!--Button to test battery-->

            <div class="card-header pb-0 mb-0" style=" color: #201063;">
                <h5 class="card-title " style="font-weight: bold;"><i class="fas fa-battery-full"></i> Battery level</h5>
            </div>
            <div class="card-body text-center">
                <h5 class="card-title " id="batteryTitle"> @environment.Batterylvl</h5>
                <div class="batteryContainer justify-content-center">
                    <div class="batteryOuter "><div class="batteryLevel50" id="batteryLevel"></div></div>
                    <div class="batteryBump"></div>
                </div>
                <br />
                <div>
                    <button type="button" class="btn btn-danger" onclick="UpdateBattery5()">5%</button>
                    <button type="button" class="btn btn-warning" onclick="UpdateBattery25()">25%</button>
                    <button type="button" class="btn btn-dark" onclick="UpdateBattery50()">50%</button>
                    <button type="button" class="btn btn-info" onclick="UpdateBattery75()">75%</button>
                    <button type="button" class="btn btn-success" onclick="UpdateBattery100()">100%</button>
                </div>
            </div>
        </div>
    </article>

    <article class="container-fluid p-3 p-lg-0 m-auto d-flex flex-column flex-lg-row justify-content-around">
        <div class="card m-auto m-lg-3 col-12 col-lg-5 p-0 ">
            <div class="card-header pb-0" style=" color: #201063;">
                <h5 class="card-title " style="font-weight: bold;"><i class="fas fa-map-marked"></i> Location</h5>
            </div>
            <div class="card-body">
                <div id="map"></div>
            </div>
        </div>
        <div class="col ml-lg-3 mr-lg-3 p-0">
            <div id="accordion">
                <div class="card col-12 mr-auto ml-auto mt-3 mb-3 p-0">
                    <div class="card-header " style=" color: #201063;" id="headingAlert">
                        <h5 class="mb-0">
                            <button class="btn  collapsed" data-toggle="collapse" data-target="#collapseAlert" aria-expanded="false" aria-controls="collapseAlert" style="background-color:red; color: #201063; font-weight:bold">
                                <i class="far fa-bell"></i><span> Alert!</span>
                            </button>
                            <button class="btn  collapsed d-none" data-toggle="collapse" data-target="#collapseAlert" aria-expanded="false" aria-controls="collapseAlert" style="color: #201063; font-weight:bold">
                                <i class="far fa-bell"></i><span class="">No alert</span>
                            </button>
                        </h5>
                    </div>
                    <div id="collapseAlert" class="collapse" aria-labelledby="headingAlert" data-parent="#accordion">
                        <div class="card-body">
                            @{ foreach (var env in environmentOrderByDesc)
                                {
                                    if (env.EventType == "1")
                                    {
                                        <div>
                                            <h1>Alert temperature</h1>
                                        </div> }
                                    else if (env.EventType == "2")
                                    {
                                        <div>
                                            <h1>Alert temperature terminé</h1>
                                        </div> }
                                    else if (env.EventType == "3")
                                    {
                                        <div>
                                            <h1>Alert Shock</h1>
                                        </div> }
                                    else
                                    {
                                        continue;
                                    }
                                } }
                        </div>
                    </div>
                </div>
            </div>
            <div class="card  mt-3 mb-3 col-12 p-0 ">
                <div class="card-header pb-0" style=" color: #201063;">
                    <h5 class="card-title" style="font-weight: bold;"><i class="fas fa-temperature-high"></i> Temperature</h5>
                </div>
                <div class="card-body">
                    <div>
                        <button type="button" id="sortButton24" class="btn btn-success" onclick="UpdateChart24()">24h</button>
                        <button type="button" id="sortButton72" class="btn btn-dark" onclick="UpdateChart72()">72h</button>
                    </div>
                    <div class="" style="height:auto">
                        <canvas id="tempsChart" class=" col-12"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </article>


</section>

<script type="text/javascript">
        let min72 = new Array();
        let max72 = new Array();
        let mean72 = new Array();
        let myLabel72 = new Array();
        let min24 = new Array();
        let max24 = new Array();
        let mean24 = new Array();
        let myLabel24 = new Array();
        let i = 1;
        let j = 1;
        let maxx24;
        let minx24;
        let meanx24;
        let maxx72;
        let minx72;
        let meanx72;

        @{


        <text>
            maxx24 = @env24.OrderByDescending(a => a.Tmax).First().Tmax;
            minx24 = @env24.OrderByDescending(a => a.Tmin).First().Tmin;
            meanx24 = @env24.OrderByDescending(a => a.Tmean).First().Tmean;
            maxx72 = @env72.OrderByDescending(a => a.Tmax).First().Tmax;
            minx72 = @env72.OrderByDescending(a => a.Tmin).First().Tmin;
            meanx72 = @env72.OrderByDescending(a => a.Tmean).First().Tmean;
        </text>
            foreach (EnvironmentPayload env in env72)
            {

                 <text>
                min72.push(@env.Tmin)
                max72.push(@env.Tmax)
                mean72.push(@env.Tmean);
                myLabel72.push(@env.TimestampEvent.Hour);
                i = i + 1;
                </text>
            }
            foreach (EnvironmentPayload env in env24.OrderBy(e=>e.TimestampEvent))
            {
                <text>
                min24.push(@env.Tmin)
                max24.push(@env.Tmax)
                mean24.push(@env.Tmean);
                myLabel24.push(@env.TimestampEvent.Hour);
                j = j + 1;
                </text>
             }
        }
        
</script>