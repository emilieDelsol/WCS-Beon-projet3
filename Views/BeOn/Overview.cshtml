@model IEnumerable<Device>
@{
    ViewData["Title"] = "Overview";
    Layout = "~/Views/Shared/_layoutBeonPrincipal.cshtml";
    IEnumerable<Device> devices = Model;
}
@{
    bool alert = false;
    <script>
        let alertExist = false;
    </script>
    foreach (var device in devices)
    {
        if (device.EnvironmentPayloads.Count != 0)
        {
            IEnumerable<EnvironmentPayload> environmentPayloadsOrderByAsc1 = device.EnvironmentPayloads.OrderBy(a => a.TimestampEvent);
            EnvironmentPayload environmentLast1 = environmentPayloadsOrderByAsc1.Last();
            IEnumerable<EnvironmentPayload> env72alert1 = environmentPayloadsOrderByAsc1.Where(e => e.TimestampEvent > environmentLast1.TimestampEvent.AddHours(-72));

            foreach (var env in env72alert1)
            {
                if (env.EventType == "1" || env.EventType == "2" || env.EventType == "3")
                {
                    alert = true;
                    <script>
                        alertExist = true;
                    </script>
                    break;
                }
            }
        }
    }
}
<section class="d-flex flex-column-reverse flex-lg-row">
    <article class="container-fluid p-0">

        <div class="card m-3 m-lg-3 ">
            <div class="card-header pb-0 " style=" color: #201063;">
                <h5 class="card-title " style="font-weight: bold;"><img src="~/Icons/mapBlueBeon.svg" alt="" /> Overview</h5>
            </div>
            <div class="card-body">
                <div id="overview"></div>
            </div>
        </div>
    </article>
    <aside class="d-flex flex-column flex-lg-row-reverse m-3 m-lg-0 mt-lg-3 mb-lg-3 p-0  ">
        <div class="h-100 p-0 mr-2 text-center">
            <a class="btn btn-light border h-100  " data-bs-toggle="collapse" href="#alertCollapse" role="button" aria-expanded="false" aria-controls="alertCollapse" onclick="ChangeArrow(alertExist)">
                <span class="position-relative d-none d-lg-flex" style="top:50%;">
                    <img src="~/Icons/left-arrow.svg" alt="" id="arrowLeft" /><img src="~/Icons/right-arrow.svg" alt="" class="d-none" id="arrowRight" />&nbsp
                    @{ if (alert)
                        { <img src="~/Icons/notificationBell.svg" alt="" />}
                        else
                        {<img src="~/Icons/notification.svg" alt="" />} }
                </span>
                <span class="position-relative d-flex flex-column-reverse d-lg-none " style="top:50%;">
                    <img src="~/Icons/down-arrow.svg" alt="" id="arrowDown" /><img src="~/Icons/up-arrow.svg" alt="" class="d-none" id="arrowUp" />&nbsp
                    @{ if (alert)
                        { <img src="~/Icons/notificationBell.svg" alt="" />}
                        else
                        {<img src="~/Icons/notification.svg" alt="" />} }
                </span>
            </a>
        </div>
        @{ if (alert)
            {
                <div class="row" >
                    <div class="col text-center" style="width:max-content;">
                        <div class="collapse" id="alertCollapse">
                            <div class="card card-body" style="height: 80vh;  overflow-y: scroll;">
                                @{
                                    string flag = "";
                                    foreach (var device in devices)
                                    {
                                        if (device.EnvironmentPayloads.Count != 0)
                                        {

                                            IEnumerable<EnvironmentPayload> environmentPayloadsOrderByAsc = device.EnvironmentPayloads.OrderBy(a => a.TimestampEvent);
                                            EnvironmentPayload environmentLast = environmentPayloadsOrderByAsc.Last();
                                            IEnumerable<EnvironmentPayload> env72alert = environmentPayloadsOrderByAsc.Where(e => e.TimestampEvent > environmentLast.TimestampEvent.AddHours(-72));


                                            foreach (var env in env72alert)
                                            {

                                                if ((env.EventType == "1" || env.EventType == "2" || env.EventType == "3") && flag != device.DeviceId)
                                                {
                                                    <div class="dropdown-divider"></div>
                                                    <div>
                                                        <p>
                                                            Device:  @device.DeviceId
                                                        </p>
                                                        <p>
                                                            Last contact: <br /> @environmentLast.TimestampEvent
                                                        </p>
                                                        <p>
                                                            <a asp-controller="Beon" asp-action="Dashboard" asp-route-IdDevice="@device.DeviceId">Link to dashboard</a>
                                                        </p>
                                                    </div>
                                                    <div class="dropdown-divider"></div>
                                                    flag = device.DeviceId;
                                                }
                                                if (env.EventType == "1")
                                                {
                                                    <div class="alertedcolorred">
                                                        <p><img src="~/Icons/heat.svg" alt="" />  Temperature Alert    -   @env.TimestampEvent</p>
                                                    </div> }
                                                else if (env.EventType == "2")
                                                {
                                                    <div class="alertcolorgreen ">
                                                        <p><img src="~/Icons/heat.svg" alt="" /> Temperature Alert Terminated   -   @env.TimestampEvent</p>
                                                    </div> }
                                                else if (env.EventType == "3")
                                                {
                                                    <div class="alertcolorblue ">
                                                        <p> <img src="~/Icons/warningBlueBeon.svg" alt="">  Shock Alert    -   @env.TimestampEvent</p>
                                                    </div> }
                                                else
                                                {
                                                    continue;
                                                }
                                            }
                                        }
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
        }
    }
    </aside>
</section>
<script type="text/javascript">

let devicesEnvironmentInfos = new Array();
@{string latitude = "43.7384";
        string longitude = "7.4246";
        double sMax = 0;
        double totalShock = 0;
        String lastContact = "";
        Int32 tMean = 0;
        Int32 batteryLvl = 0;
}
@{ foreach (Device device in devices)
    {
        if (device.EnvironmentPayloads.Count != 0)
        {

            IEnumerable<EnvironmentPayload> environmentPayloads = device.EnvironmentPayloads.OrderByDescending(e => e.TimestampEvent);
            double latitudeDouble = Math.Round(environmentPayloads.First().ComputedLatitude, 6);
            double longitudeDouble = Math.Round(environmentPayloads.First().ComputedLongitude, 6);
            latitude = latitudeDouble.ToString().Replace(',', '.');
            longitude = longitudeDouble.ToString().Replace(',', '.');
            lastContact = environmentPayloads.First().TimestampEventToString;
            sMax = environmentPayloads.First().Smax;
            totalShock = environmentPayloads.First().TotalShock;
            tMean = environmentPayloads.First().Tmean;
            batteryLvl = Convert.ToInt32(environmentPayloads.First().Batterylvl);
        }
        else if (device.PositionningPayloads.Count != 0)
        {
            IEnumerable<PositionningPayload> positionningPayloads = device.PositionningPayloads.OrderByDescending(e => e.TimestampEvent);
            double latitudeDouble = Math.Round(positionningPayloads.First().ComputedLatitude, 6);
            double longitudeDouble = Math.Round(positionningPayloads.First().ComputedLongitude, 6);
            latitude = latitudeDouble.ToString().Replace(',', '.');
            longitude = longitudeDouble.ToString().Replace(',', '.');
            sMax = 0;
            totalShock = 0;
            lastContact = "no environment info";
            tMean = 0;
            batteryLvl = 0;
        }
        else
        {
            latitude = " 43.5333";
            longitude = " 1.35366";
            sMax = 0;
            totalShock = 0;
            lastContact = "no environment and positionning info";
            tMean = 0;
            batteryLvl = 0;
        }

        <Text>
            var deviceInfos = ('"@device.DeviceId": {"lat":' +  @latitude + ',"lon":' + @longitude + ',"batteryLvl":' + @batteryLvl +',"sMax":' + @sMax  + ',"totalShock":' + @totalShock  + ',"tMean":' + @tMean + ',"lastContact": "@lastContact"}');
            devicesEnvironmentInfos.push(deviceInfos);
        </Text>
    }
}
</script>
<script src="~/js/scriptOverview.js"></script>